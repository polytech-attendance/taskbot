/*
 * This file is generated by jOOQ.
 */
package ru.spbstu.ai.r2dbc.db.tables.records;


import java.time.OffsetDateTime;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.YearToSecond;

import ru.spbstu.ai.r2dbc.db.tables.RecurringTask;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class RecurringTaskRecord extends UpdatableRecordImpl<RecurringTaskRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.recurring_task.recurring_task_id</code>.
     */
    public void setRecurringTaskId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.recurring_task.recurring_task_id</code>.
     */
    public Integer getRecurringTaskId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.recurring_task.owner_id</code>.
     */
    public void setOwnerId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.recurring_task.owner_id</code>.
     */
    public Integer getOwnerId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.recurring_task.summary</code>.
     */
    public void setSummary(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.recurring_task.summary</code>.
     */
    public String getSummary() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.recurring_task.start</code>.
     */
    public void setStart(OffsetDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.recurring_task.start</code>.
     */
    public OffsetDateTime getStart() {
        return (OffsetDateTime) get(3);
    }

    /**
     * Setter for <code>public.recurring_task.period</code>.
     */
    public void setPeriod(YearToSecond value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.recurring_task.period</code>.
     */
    public YearToSecond getPeriod() {
        return (YearToSecond) get(4);
    }

    /**
     * Setter for <code>public.recurring_task.finish</code>.
     */
    public void setFinish(OffsetDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.recurring_task.finish</code>.
     */
    public OffsetDateTime getFinish() {
        return (OffsetDateTime) get(5);
    }

    /**
     * Setter for <code>public.recurring_task.status</code>.
     */
    public void setStatus(Integer value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.recurring_task.status</code>.
     */
    public Integer getStatus() {
        return (Integer) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RecurringTaskRecord
     */
    public RecurringTaskRecord() {
        super(RecurringTask.RECURRING_TASK);
    }

    /**
     * Create a detached, initialised RecurringTaskRecord
     */
    public RecurringTaskRecord(Integer recurringTaskId, Integer ownerId, String summary, OffsetDateTime start, YearToSecond period, OffsetDateTime finish, Integer status) {
        super(RecurringTask.RECURRING_TASK);

        setRecurringTaskId(recurringTaskId);
        setOwnerId(ownerId);
        setSummary(summary);
        setStart(start);
        setPeriod(period);
        setFinish(finish);
        setStatus(status);
        resetChangedOnNotNull();
    }
}
